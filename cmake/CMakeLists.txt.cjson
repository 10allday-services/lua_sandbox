# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

cmake_minimum_required(VERSION 3.0 FATAL_ERROR)
project(cjson C)

if(MSVC)
    set(CMAKE_C_FLAGS           "/W3")
    set(CMAKE_C_FLAGS_RELEASE   "/MD /O2 /Ob2")
else()
	set(CMAKE_C_FLAGS           "-Wall -fPIC")
    set(CMAKE_C_FLAGS_RELEASE   "-O2")
    set(CMAKE_SHARED_LIBRARY_SUFFIX ".so")
endif()

include(GNUInstallDirs)
if(WIN32)
  set(CMAKE_INSTALL_LIBDIR ${CMAKE_INSTALL_BINDIR})
endif()
set(INSTALL_PATH ${CMAKE_INSTALL_LIBDIR}/luasandbox/modules)
set(CMAKE_SHARED_LIBRARY_PREFIX "")

include_directories(${LUASANDBOX_INCLUDE_DIR}/luasandbox)
set(FPCONV_SOURCES fpconv.c)

# Handle platforms missing isinf() macro (Eg, some Solaris systems).
include(CheckSymbolExists)
CHECK_SYMBOL_EXISTS(isinf math.h HAVE_ISINF)
if(NOT HAVE_ISINF)
    add_definitions(-DUSE_INTERNAL_ISINF)
endif()

if(WIN32)
    # Windows sprintf()/strtod() handle NaN/inf differently. Not supported.
    add_definitions(-DDISABLE_INVALID_NUMBERS)
endif()

add_definitions(-DLUA_SANDBOX -DDIST_VERSION="2.1.0")
add_library(cjson SHARED lua_cjson.c strbuf.c fpconv.c lua_cjson.def)
target_link_libraries(cjson ${LUASANDBOX_LUASB_LIBRARY})
if(LIBM_LIBRARY)
  target_link_libraries(cjson ${LIBM_LIBRARY})
endif()
install(TARGETS cjson DESTINATION ${INSTALL_PATH})
